Index: reservelt-backend/src/main/java/de/fhdo/reservelt/security/JwtAuthenticationFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fhdo.reservelt.security;\r\n\r\nimport jakarta.servlet.FilterChain;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.lang.NonNull;\r\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.core.userdetails.UserDetails;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.web.filter.OncePerRequestFilter;\r\n\r\nimport java.io.IOException;\r\n\r\n@Component\r\n@RequiredArgsConstructor\r\npublic class JwtAuthenticationFilter extends OncePerRequestFilter {\r\n\r\n    private  final JwtUtilities jwtUtilities ;\r\n    private final CustomerUserDetailsService customerUserDetailsService ;\r\n\r\n    @Override\r\n    protected void doFilterInternal(@NonNull HttpServletRequest request,\r\n                                    @NonNull HttpServletResponse response,\r\n                                    @NonNull FilterChain filterChain)\r\n            throws ServletException, IOException {\r\n\r\n        String token = jwtUtilities.getToken(request);\r\n\r\n        if (token!=null && jwtUtilities.validateToken(token)) {\r\n            String email = jwtUtilities.extractUsername(token);\r\n\r\n            UserDetails userDetails = customerUserDetailsService.loadUserByUsername(email);\r\n            if (userDetails != null && jwtUtilities.validateToken(token, userDetails)) {\r\n                UsernamePasswordAuthenticationToken authentication =\r\n                        new UsernamePasswordAuthenticationToken(userDetails.getUsername() ,null , userDetails.getAuthorities());\r\n                SecurityContextHolder.getContext().setAuthentication(authentication);\r\n            }\r\n        }\r\n        filterChain.doFilter(request,response);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservelt-backend/src/main/java/de/fhdo/reservelt/security/JwtAuthenticationFilter.java b/reservelt-backend/src/main/java/de/fhdo/reservelt/security/JwtAuthenticationFilter.java
--- a/reservelt-backend/src/main/java/de/fhdo/reservelt/security/JwtAuthenticationFilter.java	(revision 18fddb6c7b23c3999b4d70e051c28f51bd3679ae)
+++ b/reservelt-backend/src/main/java/de/fhdo/reservelt/security/JwtAuthenticationFilter.java	(date 1733776905000)
@@ -14,6 +14,8 @@
 
 import java.io.IOException;
 
+import static java.util.Objects.nonNull;
+
 @Component
 @RequiredArgsConstructor
 public class JwtAuthenticationFilter extends OncePerRequestFilter {
@@ -27,7 +29,12 @@
                                     @NonNull FilterChain filterChain)
             throws ServletException, IOException {
 
-        String token = jwtUtilities.getToken(request);
+        String token;
+        if (nonNull(jwtUtilities.getToken(request))) {
+            token = jwtUtilities.getToken(request);
+        } else {
+            token = jwtUtilities.getAuthTokenFromCookie(request);
+        }
 
         if (token!=null && jwtUtilities.validateToken(token)) {
             String email = jwtUtilities.extractUsername(token);
Index: reservelt-backend/src/main/resources/templates/change-password.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\" xmlns:th=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n  <meta name=\"description\" content=\"\">\r\n  <meta name=\"author\" content=\"\">\r\n  <meta name=\"Content-Type\" content=\"application/x-www-form-urlencoded\"/>\r\n  <title>Change password</title>\r\n  <link rel=\"stylesheet\" href=\"/css/register.css\">\r\n</head>\r\n\r\n<body>\r\n<div class=\"container\">\r\n  <form class=\"form-signin\" method=\"post\" action=\"/users/change-password\">\r\n    <h2 class=\"form-signin-heading\">Change password</h2>\r\n    <span th:text=\"${success}\"></span>\r\n    <span th:text=\"${failed}\"></span>\r\n    <p>\r\n      <label for=\"current_password\" class=\"sr-only\">Current Password</label>\r\n      <input type=\"password\" id=\"current_password\" name=\"currentPassword\" class=\"form-control\" placeholder=\"Current Password\" required>\r\n    </p>\r\n    <p>\r\n      <label for=\"new_password\" class=\"sr-only\">New Password</label>\r\n      <input type=\"password\" id=\"new_password\" name=\"newPassword\" class=\"form-control\" placeholder=\"New Password\" required>\r\n    </p>\r\n    <p>\r\n      <label for=\"new_password_confirmation\" class=\"sr-only\">New Password Confirmation</label>\r\n      <input type=\"password\" id=\"new_password_confirmation\" name=\"newPasswordConfirmation\" class=\"form-control\" placeholder=\"New Password Confirmation\" required>\r\n    </p>\r\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Change</button><br>\r\n  </form>\r\n</div>\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservelt-backend/src/main/resources/templates/change-password.html b/reservelt-backend/src/main/resources/templates/change-password.html
--- a/reservelt-backend/src/main/resources/templates/change-password.html	(revision 18fddb6c7b23c3999b4d70e051c28f51bd3679ae)
+++ b/reservelt-backend/src/main/resources/templates/change-password.html	(date 1733776905000)
@@ -29,7 +29,8 @@
       <label for="new_password_confirmation" class="sr-only">New Password Confirmation</label>
       <input type="password" id="new_password_confirmation" name="newPasswordConfirmation" class="form-control" placeholder="New Password Confirmation" required>
     </p>
-    <button class="btn btn-lg btn-primary btn-block" type="submit">Change</button><br>
+    <button class="btn btn-lg btn-primary btn-block" type="submit">Change</button>
+    <a href="/users" class="btn btn-warning">Cancel</a>
   </form>
 </div>
 </body>
Index: reservelt-backend/src/main/resources/templates/update.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"\">\r\n    <title>User Edit</title>\r\n    <link rel=\"stylesheet\" href=\"/css/register.css\">\r\n</head>\r\n<body>\r\n<div class=\"container mt-5\">\r\n    <div th:each=\"u : ${user}\" class=\"alert alert -info mt-2\">\r\n        <form class=\"form-signin\" method=\"post\" action=\"/users/edit\">\r\n            <h2 class=\"form-signin-heading\">Edit</h2>\r\n            <span th:text=\"${failed}\"></span>\r\n            <table>\r\n                <tr>\r\n                    <th>\r\n                        <label for=\"firstname\" class=\"sr-only\">First Name</label>\r\n                    </th>\r\n                    <td>\r\n                        <input type=\"text\" id=\"firstname\" name=\"firstName\" th:value=\"${u.firstName}\" class=\"form-control\" placeholder=\"First Name\" required autofocus>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <label for=\"lastname\" class=\"sr-only\">Last Name</label>\r\n                    </th>\r\n                    <td>\r\n                        <input type=\"text\" id=\"lastname\" name=\"lastName\" th:value=\"${u.lastName}\" class=\"form-control\" placeholder=\"Last Name\" required autofocus>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <label for=\"birthDate\">Birth Date</label>\r\n                    </th>\r\n                    <th>\r\n                        <input type=\"date\" id=\"birthDate\" name=\"birthDate\" th:value=\"${u.birthDate}\" class=\"form-signin-heading\" required/>\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <label for=\"country\">Country</label>\r\n                    </th>\r\n                    <th>\r\n                        <select name=\"country\" id=\"country\" class=\"form-control\">\r\n                            <option th:each=\"country : ${countries}\"\r\n                                    th:value=\"${country.id}\"\r\n                                    th:text=\"${country.name}\"\r\n                                    th:selected=\"${country.id} == ${u.country.id}\">\r\n                            </option>\r\n                        </select>\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        <label for=\"city\">City</label>\r\n                    </th>\r\n                    <th>\r\n                        <select name=\"city\" id=\"city\" class=\"form-control\">\r\n                            <option th:each=\"city : ${cities}\"\r\n                                    th:value=\"${city.id}\"\r\n                                    th:text=\"${city.name}\"\r\n                                    th:selected=\"${city.id} == ${u.city.id}\">\r\n                            </option>\r\n                        </select>\r\n                    </th>\r\n                </tr>\r\n            </table>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Refresh</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    document.getElementById('country').addEventListener('change', function () {\r\n        const countryId = this.value;\r\n        const citySelect = document.getElementById('city');\r\n\r\n        if (countryId) {\r\n            fetch(`/auth/${countryId}/city-list`)\r\n                .then(response => response.json())\r\n                .then(cities => {\r\n                    // Clear the existing city options\r\n                    citySelect.innerHTML = '<option value=\"\">Choose City</option>';\r\n\r\n                    // Populate the city dropdown\r\n                    cities.forEach(city => {\r\n                        const option = document.createElement('option');\r\n                        option.value = city.id; // Assuming each city object has 'id'\r\n                        option.textContent = city.name; // Assuming each city object has 'name'\r\n                        citySelect.appendChild(option);\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching cities:', error);\r\n                    citySelect.innerHTML = '<option value=\"\">Choose City</option>';\r\n                });\r\n        } else {\r\n            // Clear the city list if no country is selected\r\n            citySelect.innerHTML = '<option value=\"\">Choose City</option>';\r\n        }\r\n    });\r\n</script>\r\n</body>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservelt-backend/src/main/resources/templates/update.html b/reservelt-backend/src/main/resources/templates/update.html
--- a/reservelt-backend/src/main/resources/templates/update.html	(revision 18fddb6c7b23c3999b4d70e051c28f51bd3679ae)
+++ b/reservelt-backend/src/main/resources/templates/update.html	(date 1733776905000)
@@ -37,7 +37,7 @@
                         <label for="birthDate">Birth Date</label>
                     </th>
                     <th>
-                        <input type="date" id="birthDate" name="birthDate" th:value="${u.birthDate}" class="form-signin-heading" required/>
+                        <input type="date" id="birthDate" name="birthDate" th:value="${u.birthDate}" class="form-control" required/>
                     </th>
                 </tr>
                 <tr>
@@ -69,7 +69,8 @@
                     </th>
                 </tr>
             </table>
-            <button class="btn btn-lg btn-primary btn-block" type="submit">Refresh</button>
+            <button class="btn btn-lg btn-primary btn-block" type="submit">Save Changes</button>
+            <a href="/users" class="btn btn-warning">Cancel</a>
         </form>
     </div>
 </div>
Index: reservelt-backend/src/main/resources/static/css/register.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body {\r\n    font-family: Arial, sans-serif;\r\n    margin: 50px;\r\n    padding: 0;\r\n    background-color: #f4f4f4;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n.container {\r\n    padding: 100px 30px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n}\r\n.form-signin {\r\n    /*display: flex;*/\r\n    /*flex-direction: column;*/\r\n}\r\n.form-signin-heading {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin-bottom: 15px;\r\n    color: #333;\r\n}\r\n.form-signin p {\r\n    margin-bottom: 15px;\r\n}\r\n.form-control {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n}\r\n.form-control {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n}\r\n.form-control:focus {\r\n    border-color: #007bff;\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.2);\r\n}\r\nselect.form-control {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n}\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: 600;\r\n    color: #555;\r\n}\r\n.btn-container {\r\n    text-align: center;\r\n}\r\n.btn {\r\n    margin: 25px 0;\r\n    padding: 10px 15px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #007bff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n.btn:hover {\r\n    background-color: #0056b3;\r\n}\r\n.btn:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\r\n}\r\na {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n}\r\na:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.modal {\r\n    display: none; /* Hide by default */\r\n    position: fixed; /* Stay in place */\r\n    z-index: 1000; /* Sit on top */\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%; /* Full width */\r\n    height: 100%; /* Full height */\r\n    overflow: auto; /* Enable scrolling if needed */\r\n    background-color: rgba(0, 0, 0, 0.5); /* Black background with opacity */\r\n}\r\n\r\n.modal-content {\r\n    background-color: #fefefe;\r\n    margin: 15% auto; /* 15% from the top and centered */\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: 80%; /* Could be more or less, depending on screen size */\r\n    max-width: 500px;\r\n    border-radius: 8px;\r\n}\r\n\r\n.btn {\r\n    margin: 5px;\r\n}\r\n\r\n.btn-danger {\r\n    background-color: red;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-secondary {\r\n    background-color: gray;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-danger:hover, .btn-secondary:hover {\r\n    opacity: 0.8;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservelt-backend/src/main/resources/static/css/register.css b/reservelt-backend/src/main/resources/static/css/register.css
--- a/reservelt-backend/src/main/resources/static/css/register.css	(revision 18fddb6c7b23c3999b4d70e051c28f51bd3679ae)
+++ b/reservelt-backend/src/main/resources/static/css/register.css	(date 1733776905000)
@@ -13,10 +13,6 @@
     max-width: 500px;
     width: 100%;
 }
-.form-signin {
-    /*display: flex;*/
-    /*flex-direction: column;*/
-}
 .form-signin-heading {
     text-align: center;
     font-size: 24px;
Index: reservelt-backend/src/main/java/de/fhdo/reservelt/services/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.fhdo.reservelt.services.impl;\r\n\r\nimport de.fhdo.reservelt.converters.UserMapper;\r\nimport de.fhdo.reservelt.domain.Role;\r\nimport de.fhdo.reservelt.domain.User;\r\nimport de.fhdo.reservelt.domain.enums.RoleName;\r\nimport de.fhdo.reservelt.dto.*;\r\nimport de.fhdo.reservelt.repositories.RoleRepository;\r\nimport de.fhdo.reservelt.repositories.UserRepository;\r\nimport de.fhdo.reservelt.security.JwtUtilities;\r\nimport de.fhdo.reservelt.services.CityService;\r\nimport de.fhdo.reservelt.services.CountryService;\r\nimport de.fhdo.reservelt.services.UserService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.authentication.BadCredentialsException;\r\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\n@Service\r\npublic class UserServiceImpl implements UserService {\r\n\r\n    private final UserRepository userRepository;\r\n    private final RoleRepository roleRepository;\r\n    private final UserMapper userMapper;\r\n    private final JwtUtilities jwtUtilities;\r\n    private final PasswordEncoder passwordEncoder;\r\n    private final AuthenticationManager authenticationManager ;\r\n    private final CountryService countryService;\r\n    private final CityService cityService;\r\n\r\n\r\n    @Autowired\r\n    public UserServiceImpl(UserRepository userRepository,\r\n                           RoleRepository roleRepository,\r\n                           UserMapper userMapper,\r\n                           JwtUtilities jwtUtilities,\r\n                           PasswordEncoder passwordEncoder,\r\n                           AuthenticationManager authenticationManager,\r\n                           CountryService countryService,\r\n                           CityService cityService) {\r\n        this.userRepository = userRepository;\r\n        this.roleRepository = roleRepository;\r\n        this.userMapper = userMapper;\r\n        this.jwtUtilities = jwtUtilities;\r\n        this.passwordEncoder = passwordEncoder;\r\n        this.authenticationManager = authenticationManager;\r\n        this.countryService = countryService;\r\n        this.cityService = cityService;\r\n    }\r\n\r\n\r\n    @Override\r\n    public UserDto save(UserRegisterDto userRegisterDto) {\r\n        if (userRegisterDto.getBirthDate().isAfter(LocalDate.now().minusYears(18))) {\r\n            throw new IllegalArgumentException(\"User must be at least 18 years old.\");\r\n        }\r\n\r\n        if (!userRegisterDto.getPassword().equals(userRegisterDto.getPasswordConfirmation())) {\r\n            throw new IllegalArgumentException(\"Password and password confirmation do not match.\");\r\n        }\r\n\r\n        if (Boolean.TRUE.equals(userRepository.existsByEmail(userRegisterDto.getEmail()))) {\r\n            throw new IllegalArgumentException(\"Email is already taken.\");\r\n        }\r\n\r\n        User user = new User();\r\n        user.setFirstName(userRegisterDto.getFirstName());\r\n        user.setLastName(userRegisterDto.getLastName());\r\n        user.setBirthDate(userRegisterDto.getBirthDate());\r\n        user.setCountry(countryService.findById(userRegisterDto.getCountry()));\r\n        user.setCity(cityService.findById(userRegisterDto.getCity()));\r\n        user.setEmail(userRegisterDto.getEmail());\r\n        user.setPassword(passwordEncoder.encode(userRegisterDto.getPassword()));\r\n        Role role = roleRepository.findByRoleName(RoleName.USER);\r\n        user.setRoles(Collections.singletonList(role));\r\n        return userMapper.entityToDto(userRepository.save(user));\r\n    }\r\n\r\n    @Override\r\n    public UserDto editUserById(UserEditDto userEditDto) {\r\n        if (userEditDto.getBirthDate().isAfter(LocalDate.now().minusYears(18))) {\r\n            throw new IllegalArgumentException(\"User must be at least 18 years old.\");\r\n        }\r\n\r\n        User user = getCurrentUser();\r\n        user.setFirstName(userEditDto.getFirstName());\r\n        user.setLastName(userEditDto.getLastName());\r\n        user.setBirthDate(userEditDto.getBirthDate());\r\n        user.setCountry(countryService.findById(userEditDto.getCountry()));\r\n        user.setCity(cityService.findById(userEditDto.getCity()));\r\n        return userMapper.entityToDto(userRepository.save(user));\r\n    }\r\n\r\n    @Override\r\n    public void deleteCurrentUser() {\r\n        User user = getCurrentUser();\r\n        user.setDeletedAt(LocalDateTime.now());\r\n        userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public String authenticationToken(UserLoginDto userLoginDto) {\r\n        try {\r\n            Authentication authentication= authenticationManager.authenticate(\r\n                    new UsernamePasswordAuthenticationToken(\r\n                            userLoginDto.getEmail(),\r\n                            userLoginDto.getPassword()\r\n                    )\r\n            );\r\n            SecurityContextHolder.getContext().setAuthentication(authentication);\r\n            User user = userRepository.findByEmail(authentication.getName()).orElseThrow(() -> new UsernameNotFoundException(\"User not found\"));\r\n            List<String> rolesNames = new ArrayList<>();\r\n            user.getRoles().forEach(r-> rolesNames.add(String.valueOf(r.getRoleName())));\r\n            return jwtUtilities.generateToken(user.getUsername(), rolesNames);\r\n        } catch (BadCredentialsException ex) {\r\n            throw new BadCredentialsException(\"Bad credentials\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void changePassword(ChangeUserPasswordDto changeUserPasswordDto) {\r\n        User user = getCurrentUser();\r\n        if (!passwordEncoder.matches(changeUserPasswordDto.getCurrentPassword(), user.getPassword())) {\r\n            throw new IllegalArgumentException(\"Current password does not match.\");\r\n        }\r\n        if (!changeUserPasswordDto.getNewPassword().equals(changeUserPasswordDto.getNewPasswordConfirmation())) {\r\n            throw new IllegalArgumentException(\"New password and password confirmation do not match.\");\r\n        }\r\n\r\n        user.setPassword(passwordEncoder.encode(changeUserPasswordDto.getNewPassword()));\r\n        userRepository.save(user);\r\n    }\r\n\r\n    private Object getCurrentUserEmail() {\r\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\r\n        if (authentication != null) {\r\n            return authentication.getPrincipal();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public UserDto getProfile() {\r\n        return userMapper.entityToDto(getCurrentUser());\r\n    }\r\n\r\n    private User getCurrentUser() {\r\n        return userRepository.findByEmail(Objects.requireNonNull(getCurrentUserEmail()).toString()).orElseThrow(() -> new UsernameNotFoundException(\"User not found\"));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reservelt-backend/src/main/java/de/fhdo/reservelt/services/impl/UserServiceImpl.java b/reservelt-backend/src/main/java/de/fhdo/reservelt/services/impl/UserServiceImpl.java
--- a/reservelt-backend/src/main/java/de/fhdo/reservelt/services/impl/UserServiceImpl.java	(revision 18fddb6c7b23c3999b4d70e051c28f51bd3679ae)
+++ b/reservelt-backend/src/main/java/de/fhdo/reservelt/services/impl/UserServiceImpl.java	(date 1733776905000)
@@ -112,6 +112,9 @@
 
     @Override
     public String authenticationToken(UserLoginDto userLoginDto) {
+        if (Boolean.FALSE.equals(userRepository.existsByEmail(userLoginDto.getEmail()))) {
+            throw new BadCredentialsException("Bad credentials");
+        }
         try {
             Authentication authentication= authenticationManager.authenticate(
                     new UsernamePasswordAuthenticationToken(
